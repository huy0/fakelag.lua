--local variables for API. Automatically generated by https://github.com/simpleavaster/gslua/blob/master/authors/sapphyrus/generate_api.lua 
local client_latency, client_log, client_draw_rectangle, client_draw_circle_outline, client_timestamp, client_userid_to_entindex, client_draw_indicator, client_draw_gradient, client_set_event_callback, client_screen_size, client_eye_position = client.latency, client.log, client.draw_rectangle, client.draw_circle_outline, client.timestamp, client.userid_to_entindex, client.draw_indicator, client.draw_gradient, client.set_event_callback, client.screen_size, client.eye_position 
local client_draw_circle, client_color_log, client_delay_call, client_draw_text, client_visible, client_exec, client_trace_line, client_set_cvar, client_world_to_screen = client.draw_circle, client.color_log, client.delay_call, client.draw_text, client.visible, client.exec, client.trace_line, client.set_cvar, client.world_to_screen 
local client_draw_hitboxes, client_get_cvar, client_draw_line, client_camera_angles, client_draw_debug_text, client_random_int, client_random_float = client.draw_hitboxes, client.get_cvar, client.draw_line, client.camera_angles, client.draw_debug_text, client.random_int, client.random_float 
local entity_get_local_player, entity_is_enemy, entity_hitbox_position, entity_get_player_name, entity_get_steam64, entity_get_bounding_box, entity_get_all, entity_set_prop = entity.get_local_player, entity.is_enemy, entity.hitbox_position, entity.get_player_name, entity.get_steam64, entity.get_bounding_box, entity.get_all, entity.set_prop 
local entity_is_alive, entity_get_player_weapon, entity_get_prop, entity_get_players, entity_get_classname = entity.is_alive, entity.get_player_weapon, entity.get_prop, entity.get_players, entity.get_classname 
local globals_realtime, globals_absoluteframetime, globals_tickcount, globals_curtime, globals_mapname, globals_tickinterval, globals_framecount, globals_frametime, globals_maxplayers = globals.realtime, globals.absoluteframetime, globals.tickcount, globals.curtime, globals.mapname, globals.tickinterval, globals.framecount, globals.frametime, globals.maxplayers 
local ui_new_slider, ui_new_combobox, ui_reference, ui_set_visible, ui_is_menu_open, ui_new_color_picker, ui_set_callback, ui_set, ui_new_checkbox, ui_new_hotkey, ui_new_button, ui_new_multiselect, ui_get = ui.new_slider, ui.new_combobox, ui.reference, ui.set_visible, ui.is_menu_open, ui.new_color_picker, ui.set_callback, ui.set, ui.new_checkbox, ui.new_hotkey, ui.new_button, ui.new_multiselect, ui.get 
local math_ceil, math_tan, math_log10, math_randomseed, math_cos, math_sinh, math_random, math_huge, math_pi, math_max, math_atan2, math_ldexp, math_floor, math_sqrt, math_deg, math_atan, math_fmod = math.ceil, math.tan, math.log10, math.randomseed, math.cos, math.sinh, math.random, math.huge, math.pi, math.max, math.atan2, math.ldexp, math.floor, math.sqrt, math.deg, math.atan, math.fmod 
local math_acos, math_pow, math_abs, math_min, math_sin, math_frexp, math_log, math_tanh, math_exp, math_modf, math_cosh, math_asin, math_rad = math.acos, math.pow, math.abs, math.min, math.sin, math.frexp, math.log, math.tanh, math.exp, math.modf, math.cosh, math.asin, math.rad 
local table_maxn, table_foreach, table_sort, table_remove, table_foreachi, table_move, table_getn, table_concat, table_insert = table.maxn, table.foreach, table.sort, table.remove, table.foreachi, table.move, table.getn, table.concat, table.insert 
local string_find, string_format, string_rep, string_gsub, string_len, string_gmatch, string_dump, string_match, string_reverse, string_byte, string_char, string_upper, string_lower, string_sub = string.find, string.format, string.rep, string.gsub, string.len, string.gmatch, string.dump, string.match, string.reverse, string.byte, string.char, string.upper, string.lower, string.sub 
local bit_band = bit.band
--end of local variables

local chkbox_antibruteforce = ui.new_checkbox("MISC", "Settings", "enhanced anti aim")
local ref_yaw_real, ref_yaw_real_val = ui.reference("AA", "Anti-aimbot angles", "Yaw")
local ref_pitch = ui.reference("AA", "Anti-aimbot angles", "Pitch")

local vel_reached = false
 
hit_times = 0
 
local function on_player_hurt(e)
    if not ui_get(chkbox_antibruteforce) then
        return
    end

    local hurt_uid, attacker_uid = client_userid_to_entindex(e.userid), client_userid_to_entindex(e.attacker)
 
    if hurt_uid == entity_get_local_player() then
        hit_times = hit_times + 1
    end

end

client.set_event_callback("run_command", function()
    if not ui_get(chkbox_antibruteforce) then
        return
    end

    local origin_x, origin_y, origin_z  = entity_get_prop(entity_get_local_player(), "m_vecOrigin")

    local vel_x, vel_y = entity_get_prop(entity_get_local_player(), "m_vecVelocity")
    local vel_real = math_floor(math_min(10000, math_sqrt(vel_x*vel_x + vel_y*vel_y) + 0.5))

	local function fl_onground(ent)
		local flags = entity_get_prop(ent, "m_fFlags")
		local flags_on_ground = bit_band(flags, 1)
	
		if flags_on_ground == 1 then
			return true
		end	
		return false
	end

    if hit_times > 3 then
        hit_times = 0
    end

    -- 0

    if hit_times == 0 and not vel_reached and not fl_onground(entity_get_local_player()) then
        ui_set(ref_yaw_real, "static")
        ui_set(ref_yaw_real_val, "-75")
    end

    if hit_times == 0 and not vel_reached and fl_onground(entity_get_local_player()) then
    	ui_set(ref_yaw_real, "static")
    	ui_set(ref_yaw_real_val, "180")
    end

    -- 1

    if hit_times == 1 and not vel_reached and not fl_onground(entity_get_local_player()) then
        ui_set(ref_yaw_real, "static")
        ui_set(ref_yaw_real_val, "90")
    end

    if hit_times == 1 and not vel_reached and fl_onground(entity_get_local_player()) then
    	ui_set(ref_yaw_real, "static")
    	ui_set(ref_yaw_real_val, "0")
    end

    -- 2

    if hit_times == 2 and not vel_reached and not fl_onground(entity_get_local_player()) then
        ui_set(ref_yaw_real, "static")
        ui_set(ref_yaw_real_val, "180")
    end

    if hit_times == 2 and not vel_reached and fl_onground(entity_get_local_player()) then
    	ui_set(ref_yaw_real, "static")
    	ui_set(ref_yaw_real_val, "110")
    end

    -- 3

    if hit_times == 3 and not vel_reached and not fl_onground(entity_get_local_player()) then
        ui_set(ref_yaw_real, "static")
        ui_set(ref_yaw_real_val, "-145")
    end

    if hit_times == 3 and not vel_reached and fl_onground(entity_get_local_player()) then
    	ui_set(ref_yaw_real, "static")
    	ui_set(ref_yaw_real_val, "-35")
    end

    if vel_real > 897 then
    	vel_reached = true
    	ui_set(ref_yaw_real, "static")
    	ui_set(ref_yaw_real_val, "110")
    else
    	vel_reached = false
    end

    if origin_z == nil then 
    	return
    end

    if origin_z > 105 and not fl_onground(entity_get_local_player()) then
    	ui_set(ref_pitch, "Up")
    else
    	ui_set(ref_pitch, "Down")
    end

end)

client.set_event_callback("player_hurt", on_player_hurt)
			
